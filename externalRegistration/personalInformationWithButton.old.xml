<?xml version="1.0" encoding="UTF-8"?>
<dynaForm type="xmlform" name="" width="600" enabletemplate="1" mode="" labelWidth="150">
<__THETITLE__ type="title">
  <en>Create an Account</en>
</__THETITLE__>
<__USR_FIRSTNAME__ type="text" maxlength="50" validate="Any" required="1" readonly="0" size="50" mode="edit">
  <en>First Name</en>
</__USR_FIRSTNAME__>
<__USR_LASTNAME__ type="text" maxlength="50" validate="Any" required="1" readonly="0" size="50" mode="edit">
  <en>Last Name</en>
</__USR_LASTNAME__>
<__USR_EMAIL__ type="text" maxlength="100" validate="Email" required="1" readonly="0" size="35" mode="edit">
  <en>E-Mail</en>
</__USR_EMAIL__>
<__EMAIL_AS_USERNAME__ type="checkbox" value="1" falsevalue="0" defaultvalue="0" readonly="0" labelonright="1" enablehtml="0" hint="" required="0" savelabel="0">
  <en>Use E-mail as Username</en>
</__EMAIL_AS_USERNAME__>
<__USR_USERNAME__ type="text" maxlength="100" validate="Any" strto="LOWER" required="0" readonly="0" size="50" mode="edit">
  <en>User Name</en>
</__USR_USERNAME__>
<__PASSWORD__ type="password" maxlength="50" validate="Any" required="1" readonly="0" size="50" mode="edit">
  <en>Password</en>
</__PASSWORD__>
<__CONFIRM_PASSWORD__ type="password" maxlength="50" validate="Any" required="1" readonly="0" size="50" mode="edit">
  <en>Confirm Password</en>
</__CONFIRM_PASSWORD__>
<__CAPTCHA__ type="text" maxlength="50" validate="Any" required="1" readonly="0" size="20" mode="edit" />
<__SAVE_CONTINUE__ type="submit" mode="edit">
  <en><![CDATA[Save & Continue]]></en>
</__SAVE_CONTINUE__>
<__JS__ type="javascript">
<![CDATA[

var validateFormCopy = function(sRequiredFields) {
  if( typeof(sRequiredFields) != 'object' || sRequiredFields.indexOf("%27") > 0 ){
    sRequiredFields = sRequiredFields.replace(/%27/gi, '"');
  }
  if( typeof(sRequiredFields) != 'object' || sRequiredFields.indexOf("%39") > 0 ){
    sRequiredFields = sRequiredFields.replace(/%39/gi, "'");
  }
  aRequiredFields = eval(sRequiredFields);

  var sMessage = '';
  var invalid_fields = Array();

  var fielEmailInvalid = Array();

      for (var i = 0; i < aRequiredFields.length; i++) {
        aRequiredFields[i].label=(aRequiredFields[i].label=='')?aRequiredFields[i].name:aRequiredFields[i].label;

        if (!notValidateThisFields.inArray(aRequiredFields[i].name)) {

          if (typeof aRequiredFields[i].required != 'undefined'){
            required = aRequiredFields[i].required;
          }
          else {
            required = 1;
          }

          if (typeof aRequiredFields[i].validate != 'undefined') {
            validate = aRequiredFields[i].validate;
          }
          else {
            validate = '';
          }

          if(required == 1)
          {
            switch(aRequiredFields[i].type) {
              case 'suggest':
                var vtext1 = new input(getField(aRequiredFields[i].name+'_suggest'));
                if(getField(aRequiredFields[i].name).value==''){
                  invalid_fields.push(aRequiredFields[i].label);
                  vtext1.failed();
                } else {
                  vtext1.passed();
                }
              break;
              case 'text':
                var vtext = new input(getField(aRequiredFields[i].name));
                  if(getField(aRequiredFields[i].name).value=='') {
                    invalid_fields.push(aRequiredFields[i].label);
                    vtext.failed();
                  }
                  else {
                    vtext.passed();
                  }
                break;

              case 'dropdown':
                var vtext = new input(getField(aRequiredFields[i].name));
                if(getField(aRequiredFields[i].name).value==''){
                  invalid_fields.push(aRequiredFields[i].label);
                  vtext.failed();
                } else {
                  vtext.passed();
                }
                break;

              case 'textarea':

                var vtext = new input(getField(aRequiredFields[i].name));
                if(getField(aRequiredFields[i].name).value==''){
                  invalid_fields.push(aRequiredFields[i].label);
                  vtext.failed();
                } else {
                  vtext.passed();
                }

              break;

              case 'password':
                var vpass = new input(getField(aRequiredFields[i].name));
                if(getField(aRequiredFields[i].name).value==''){
                  invalid_fields.push(aRequiredFields[i].label);
                  vpass.failed();
                } else {
                  vpass.passed();
                }
                break;

              case 'currency':
                var vcurr = new input(getField(aRequiredFields[i].name));
                if(getField(aRequiredFields[i].name).value==''){
                  invalid_fields.push(aRequiredFields[i].label);
                  vcurr.failed();
                } else {
                  vcurr.passed();
                }
              break;

              case 'percentage':
                var vper = new input(getField(aRequiredFields[i].name));
                if(getField(aRequiredFields[i].name).value==''){
                  invalid_fields.push(aRequiredFields[i].label);
                  vper.failed();
                } else {
                  vper.passed();
                }
              break;

              case 'yesno':
                var vtext = new input(getField(aRequiredFields[i].name));
                if(getField(aRequiredFields[i].name).value==''){
                  invalid_fields.push(aRequiredFields[i].label);
                  vtext.failed();
                } else {
                  vtext.passed();
                }
              break;

              case 'date':
                var vtext = new input(getField(aRequiredFields[i].name));
                if(getField(aRequiredFields[i].name).value==''){
                  invalid_fields.push(aRequiredFields[i].label);
                  vtext.failed();
                } else {
                  vtext.passed();
                }
              break;

              case 'file':
                var vtext = new input(getField(aRequiredFields[i].name));
                if(getField(aRequiredFields[i].name).value==''){
                  invalid_fields.push(aRequiredFields[i].label);
                  vtext.failed();
                } else {
                  vtext.passed();
                }
              break;

              case 'listbox':
                var oAux = getField(aRequiredFields[i].name);
                var bOneSelected = false;
                for (var j = 0; j < oAux.options.length; j++) {
                  if (oAux.options[j].selected) {
                    bOneSelected = true;
                    j = oAux.options.length;
                  }
                }
                if(bOneSelected == false)
                  invalid_fields.push(aRequiredFields[i].label);
              break;

              case 'radiogroup':
                var x=aRequiredFields[i].name;
                var oAux = document.getElementsByName('form['+ x +']');
                var bOneChecked = false;
                for (var k = 0; k < oAux.length; k++) {
                  var r = oAux[k];
                  if (r.checked) {
                    bOneChecked = true;
                    k = oAux.length;
                  }
                }

                if(bOneChecked == false)
                  invalid_fields.push(aRequiredFields[i].label);

              break;

              case 'checkgroup':
                var bOneChecked = false;
                var aAux = document.getElementsByName('form[' + aRequiredFields[i].name + '][]');
                for (var k = 0; k < aAux.length; k++) {
                  if (aAux[k].checked) {
                    bOneChecked = true;
                    k = aAux.length;
                  }
                }
                if(!bOneChecked) {
                  invalid_fields.push(aRequiredFields[i].label);
                }

              break;
            }
          }

          if(validate != '') {
            //validate_fields
              switch(aRequiredFields[i].type) {
                case 'suggest':
                break;

                case 'text':

                  if(validate=="Email") {
                    var vtext = new input(getField(aRequiredFields[i].name));
                      if(getField(aRequiredFields[i].name).value!='') {
                        var email = getField(aRequiredFields[i].name);
                        //var filter = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
                        //var filter = /^[\w\_\-\.ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â§ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â±]{2,255}@[\w\_\-]{2,255}\.[a-z]{1,3}\.?[a-z]{0,3}$/;
                        var filter =/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;
                          if (!filter.test(email.value)&&email.value!="") {
                            fielEmailInvalid.push(aRequiredFields[i].label);
                            vtext.failed();
                            email.focus();
                          }
                          else {
                            vtext.passed();
                          }
                      }
                  }
                  break;
              }
          }
        }
      }
  // call added by gustavo - cruz, gustavo-at-colosa.com validate grid forms
  invalid_fields = validateGridForms(invalid_fields);

  if (invalid_fields.length > 0 ||fielEmailInvalid.length> 0) {
    //alert(G_STRINGS.ID_REQUIRED_FIELDS + ": \n\n" + sMessage);



    // loop for invalid_fields
    for(j=0; j<invalid_fields.length; j++){
      sMessage += (j > 0)? ', ': '';
      sMessage += invalid_fields[j];
    }

    // Loop for invalid_emails
    var emailInvalidMessage = "";
    for(j=0; j<fielEmailInvalid.length; j++){
      emailInvalidMessage += (j > 0)? ', ': '';
      emailInvalidMessage += fielEmailInvalid[j];
    }


    /* new leimnud.module.app.alert().make({
            label:G_STRINGS.ID_REQUIRED_FIELDS + ": <br/><br/>[ " + sMessage + " ]",
            width:450,
            height:140 + (parseInt(invalid_fields.length/10)*10)
        });*/

    //!create systemMessaggeInvalid of field invalids
    var systemMessaggeInvalid = "";

      if(invalid_fields.length > 0) {
        systemMessaggeInvalid += "\n \n"+G_STRINGS.ID_REQUIRED_FIELDS + ": \n \n [ " + sMessage + " ]";
      }

      if(fielEmailInvalid.length > 0) {
        systemMessaggeInvalid += "\n \n" +  G_STRINGS.ID_VALIDATED_FIELDS + ": \n \n [ " + emailInvalidMessage + " ]";
      }


    alert(systemMessaggeInvalid);
    return false;
  }
  else {
    return true;
  }
};

var __reloadCaptchaImage__ = function() {
  document.getElementById('__CAPTCHA_IMAGE__').src = '/plugin/externalRegistration/securimage/securimage_show.php?' + Math.random();
};

var __saveConfigurationER__ = function() {
  if (getField('__USR_FIRSTNAME__').value.trim() == '') {
    alert('Please enter your First Name');
    return false;
  }
  if (getField('__USR_LASTNAME__').value.trim() == '') {
    alert('Please enter your Last Name');
    return false;
  }
  if (getField('__USR_EMAIL__').value.trim() == '') {
    alert('Please enter your E-Mail');
    return false;
  }
  if (!getField('__EMAIL_AS_USERNAME__').checked) {
    if (getField('__USR_USERNAME__').value.trim() == '') {
      alert('Please enter your User Name');
      return false;
    }
  }
  if (getField('__PASSWORD__').value.trim() == '') {
    alert('Please enter your Password');
    return false;
  }
  if (getField('__CONFIRM_PASSWORD__').value.trim() == '') {
    alert('Please enter your Password confirmation');
    return false;
  }
  if (getField('__PASSWORD__').value.trim() != getField('__CONFIRM_PASSWORD__').value.trim()) {
    alert('The confirmation password is incorrect');
    return false;
  }
  if (getField('__CAPTCHA__').value.trim() == '') {
    alert('Please enter the characters you see in the picture');
    return false;
  }
  if (document.getElementById('DynaformRequiredFields')) {
    var requiredFields = eval(document.getElementById('DynaformRequiredFields').value.replace(/%27/g, '"'));
    var result = validateFormCopy(requiredFields);
    if (result) {
      document.getElementById('DynaformRequiredFields').value = {__USR_FIRSTNAME__: getField('__USR_FIRSTNAME__').value,
                                                                 __USR_LASTNAME__: getField('__USR_LASTNAME__').value,
                                                                 __USR_EMAIL__: getField('__USR_EMAIL__').value,
                                                                 __EMAIL_AS_USERNAME__: getField('__EMAIL_AS_USERNAME__').checked,
                                                                 __USR_USERNAME__: getField('__USR_USERNAME__').value,
                                                                 __PASSWORD__: getField('__PASSWORD__').value,
                                                                 __CAPTCHA__: getField('__CAPTCHA__').value}.toJSONString();
    }
    return result;
  }
  else {
    return true;
  }
};

var __checkUserName__ = function() {
  var USR_USERNAME = !getField('__EMAIL_AS_USERNAME__').checked ? getField('__USR_USERNAME__').value : getField('__USR_EMAIL__').value;
  USR_USERNAME = USR_USERNAME.replace(/[^a-zA-Z0-9@.\-_]/g, '');
  var rpc = new leimnud.module.rpc.xmlhttp({
    url: 'checkUserName',
    args: 'username=' + USR_USERNAME
  });
  rpc.callback = function(rpc) {
    var response = rpc.xmlhttp.responseText.parseJSON();
    if (response.userExists) {
      alert('User Name already exists, please enter another one.');
      var __USR_USERNAME__ = getField('__USR_USERNAME__');
      if (getField('__EMAIL_AS_USERNAME__').checked) {
        getField('__EMAIL_AS_USERNAME__').checked = false;
        __USR_USERNAME__.disabled = false;
        __USR_USERNAME__.style.backgroundColor = '';
        getField('__USR_EMAIL__').focus();
      }
      else {
        getField('__USR_USERNAME__').focus();
      }
      __USR_USERNAME__.value = '';
    }
  };
  rpc.make();
};

getField('__EMAIL_AS_USERNAME__').onclick = function() {
  var __USR_USERNAME__ = getField('__USR_USERNAME__');
  if (getField('__EMAIL_AS_USERNAME__').checked) {
    if (getField('__USR_EMAIL__').value != '') {
      __USR_USERNAME__.value = '';
      __USR_USERNAME__.disabled = true;
      __USR_USERNAME__.style.backgroundColor = 'lightgray';
      __checkUserName__();
    }
    else {
      alert('Please enter your E-Mail');
      getField('__EMAIL_AS_USERNAME__').checked = false;
      __USR_USERNAME__.disabled = false;
      __USR_USERNAME__.style.backgroundColor = '';
    }
  }
  else {
    __USR_USERNAME__.value = '';
    __USR_USERNAME__.disabled = false;
    __USR_USERNAME__.style.backgroundColor = '';
  }
};

if (getField('__EMAIL_AS_USERNAME__').checked) {
  getField('__USR_USERNAME__').disabled = true;
  getField('__USR_USERNAME__').style.backgroundColor = 'lightgray';
}

leimnud.event.add(getField('__USR_EMAIL__'), 'change', function() {
  if (getField('__EMAIL_AS_USERNAME__').checked) {
    __checkUserName__();
  }
});

leimnud.event.add(getField('__USR_USERNAME__'), 'change', __checkUserName__);

// Overwrite function "validateForm"
validateForm = function() {
  return __saveConfigurationER__();
};

]]>
</__JS__>
</dynaForm>
<?xml version="1.0" encoding="UTF-8"?>
<dynaForm type="xmlmenu">

<MNU_ADD type="link" value="" link="javascript:newRol();" onclick="" colAlign="left" colWidth="35">
  <en>New</en>
</MNU_ADD>

<PAGED_TABLE_ID type="private"/>

<SEARCH_FILTER_FORM type="private"/>
<CONFIRM type="private"/>

<JS type="javascript"><![CDATA[

PROCESS_REQUEST_FILE = '../pentahoreports/pentahoRolesAjax';
var rolePopup;

function newRol() {
  popupWindow('', 'pentahoRolesAjax?request=newRole', 350, 225);
}

function assignDashboardToUserRole(){
  popupWindow('', 'pentahoRolesAjax?request=assignDashboard', 350, 225);
}

function saveNewRole()
{
	code = $('form[ROL_CODE]').value;
	//name = $('form[ROL_NAME]').value;
	if(code == '') {
		new leimnud.module.app.alert().make({label: G_STRINGS.ID_ROLES_MSG1});
		return false;
	} 
	
	var uri = 'request=verifyNewRole&code='+code;
	var ajax = AJAX();
	ajax.open("POST", PROCESS_REQUEST_FILE, true);
	ajax.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;");		
	ajax.onreadystatechange = function() { 
		if(ajax.readyState == 4) {
			
			if(eval(ajax.responseText.trim())){

				code = $('form[ROL_CODE]').value;
				//status = $('form[ROL_STATUS]').value;
			  var uri = 'request=saveNewRole&code='+code;	
		  
			  	var oRPC = new leimnud.module.rpc.xmlhttp({
			  		url : PROCESS_REQUEST_FILE,
			  		args: uri
			  	});
				
			  	oRPC.callback = function(rpc){
				  	var oRPC = new leimnud.module.rpc.xmlhttp({
					    url   : PROCESS_REQUEST_FILE,
					    async : false,
					    method: 'POST',
					    args  : 'request=show&r='+Math.random()
				  	});
					oRPC.make();
					$('publisherContent[0]').innerHTML = oRPC.xmlhttp.responseText;	
				}.extend(this);
				oRPC.make();
          currentPopupWindow.remove();
		  	}
		  	else{
          new leimnud.module.app.alert().make({label: G_STRINGS.ID_ROLES_MSG2});
          return false;
		  	}
		} 
	}
	ajax.send(uri);

}


function editRole(ROL_UID)
{  	
	if(ROL_UID!='00000000000000000000000000000002')
	 {	 
    	var uri = 'request=editRole&ROL_UID='+ROL_UID;	
    	popupWindow('', 'pentahoRolesAjax?'+uri, 350, 225);
   }
   else
   {  
   		new leimnud.module.app.alert().make({label: G_STRINGS.ID_ROLES_MSG});			
   }		
}

function updateRole(ROL_UID) {
  
  	code = $('form[ROL_CODE]').value;
	//name = $('form[ROL_NAME]').value;
	if(code == '') {
		new leimnud.module.app.alert().make({label: G_STRINGS.ID_ROLES_MSG1});
		return false;
	} 
	
  		
	//status = $('form[ROL_STATUS]').value;
	
    var uri = 'request=updateRole&code='+code+'&rol_uid='+ROL_UID;		
  
  	var oRPC = new leimnud.module.rpc.xmlhttp({
  		url : PROCESS_REQUEST_FILE,
  		args: uri
  	});
	
  	oRPC.callback = function(rpc){
	  	var oRPC = new leimnud.module.rpc.xmlhttp({
		    url   : PROCESS_REQUEST_FILE,
		    async : false,
		    method: 'POST',
		    args  : 'request=show'
	  	});
		oRPC.make();
		$('publisherContent[0]').innerHTML = oRPC.xmlhttp.responseText;
		currentPopupWindow.remove();
	}.extend(this);
	oRPC.make();
};

function deleteRole(ROL_UID) {		
	 		var uri = 'request=canDeleteRole&ROL_UID='+ROL_UID;
			var ajax = AJAX();
			ajax.open("POST", PROCESS_REQUEST_FILE, true);
			ajax.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;");		
			ajax.onreadystatechange = function() { 
				if(ajax.readyState == 4) {
					
					if(eval(ajax.responseText.trim())){	
					  new leimnud.module.app.confirm().make({
					  	label:G_STRINGS.ID_REMOVE_ROLE,
					  	action:function() {
					  		var uri = 'request=deleteRole&ROL_UID='+ROL_UID;	
					  
						  	var oRPC = new leimnud.module.rpc.xmlhttp({
						  		url : PROCESS_REQUEST_FILE,
						  		args: uri
						  	});
							
						  	oRPC.callback = function(rpc){
							  	var oRPC = new leimnud.module.rpc.xmlhttp({
								    url   : PROCESS_REQUEST_FILE,
								    async : false,
								    method: 'POST',
								    args  : 'request=show'
							  	});
								oRPC.make();
								$('publisherContent[0]').innerHTML = oRPC.xmlhttp.responseText;
							}.extend(this);
							oRPC.make();
							
					  	}.extend(this)
					  });
					} 
					else
					{
						new leimnud.module.app.alert().make({label: G_STRINGS.ID_ROLES_CAN_NOT_DELETE});
						return false;
					}
			 	} 
			}
			ajax.send(uri);
};

function usersIntoRole(ROL_UID)
{
    var oRPC = new leimnud.module.rpc.xmlhttp({
		url   : PROCESS_REQUEST_FILE,
		async : false,
		method: 'POST',
		args  : 'request=usersIntoRole&ROL_UID=' + ROL_UID
    });
    oRPC.make();
    currentPopupWindow.clearContent();
    currentPopupWindow.addContent(oRPC.xmlhttp.responseText);
}

function deleteUserRole(ROL_UID, USR_UID){
	
	new leimnud.module.app.confirm().make({
    	label:G_STRINGS.ID_MSG_CONFIRM,
    	action:function(){
	        var oRPC = new leimnud.module.rpc.xmlhttp({
				url   : PROCESS_REQUEST_FILE,
				async : false,
				method: 'POST',
				args  : 'request=deleteUserRole&ROL_UID=' + ROL_UID + '&USR_UID=' + USR_UID
	        });
	        oRPC.make();
	        currentPopupWindow.clearContent();
			currentPopupWindow.addContent(oRPC.xmlhttp.responseText);
		}.extend(this)
    });
};

function showDashboardList(ROL_UID, USR_UID){
  var oRPC = new leimnud.module.rpc.xmlhttp({
		url   : PROCESS_REQUEST_FILE,
		async : false,
		method: 'POST',
		args  : 'request=showDashboardList&ROL_UID=' + ROL_UID
    });
    oRPC.make();
    currentPopupWindow.clearContent();
	currentPopupWindow.addContent(oRPC.xmlhttp.responseText);
};

function assignDashboard(ROL_UID, USR_UID, DSH_UID){
  var oRPC = new leimnud.module.rpc.xmlhttp({
		url   : PROCESS_REQUEST_FILE,
		async : false,
		method: 'POST',
		args  : 'request=assignDashboard&ROL_UID=' + ROL_UID + '&USR_UID=' + USR_UID + '&DSH_UID=' + DSH_UID
  });
  oRPC.make();
  currentPopupWindow.clearContent();
	currentPopupWindow.addContent(oRPC.xmlhttp.responseText);
};

function showUsers(ROL_UID){
	var oRPC = new leimnud.module.rpc.xmlhttp({
		url   : PROCESS_REQUEST_FILE,
		async : false,
		method: 'POST',
		args  : 'request=showUsers&ROL_UID=' + ROL_UID
    });
    oRPC.make();
    currentPopupWindow.clearContent();
	currentPopupWindow.addContent(oRPC.xmlhttp.responseText);	
}

function showGroups(ROL_UID){
	var oRPC = new leimnud.module.rpc.xmlhttp({
		url   : PROCESS_REQUEST_FILE,
		async : false,
		method: 'POST',
		args  : 'request=showGroups&ROL_UID=' + ROL_UID
    });
    oRPC.make();
    currentPopupWindow.clearContent();
	currentPopupWindow.addContent(oRPC.xmlhttp.responseText);
}

function showDepartments(ROL_UID){
	var oRPC = new leimnud.module.rpc.xmlhttp({
		url   : PROCESS_REQUEST_FILE,
		async : false,
		method: 'POST',
		args  : 'request=showDepartments&ROL_UID=' + ROL_UID
    });
    oRPC.make();
    currentPopupWindow.clearContent();
	currentPopupWindow.addContent(oRPC.xmlhttp.responseText);
}
// asign via Ajax a user to a role
function assignUserToRole(ROL_UID, USR_UID){
	var oRPC = new leimnud.module.rpc.xmlhttp({
		url   : PROCESS_REQUEST_FILE,
		async : false,
		method: 'POST',
		args  : 'request=assignUserToRole&ROL_UID=' + ROL_UID + '&USR_UID=' + USR_UID
    });
    oRPC.make();
    currentPopupWindow.clearContent();
    currentPopupWindow.addContent(oRPC.xmlhttp.responseText);
}

// asign via Ajax a group to a role
function assignGroupToRole(ROL_UID, GRP_UID){
	var oRPC = new leimnud.module.rpc.xmlhttp({
		url   : PROCESS_REQUEST_FILE,
		async : false,
		method: 'POST',
		args  : 'request=assignGroupToRole&ROL_UID=' + ROL_UID + '&GRP_UID=' + GRP_UID
    });
    oRPC.make();
    currentPopupWindow.clearContent();
	currentPopupWindow.addContent(oRPC.xmlhttp.responseText);
}

// asign via Ajax a department to a role
function assignDepartmentToRole(ROL_UID, DEP_UID){
	var oRPC = new leimnud.module.rpc.xmlhttp({
		url   : PROCESS_REQUEST_FILE,
		async : false,
		method: 'POST',
		args  : 'request=assignDepartmentToRole&ROL_UID=' + ROL_UID + '&DEP_UID=' + DEP_UID
    });
    oRPC.make();
    currentPopupWindow.clearContent();
	currentPopupWindow.addContent(oRPC.xmlhttp.responseText);
}

function viewReports(ROL_UID)
{
	var uri = 'request=viewReports&ROL_UID='+ROL_UID;
	popupWindow('', 'pentahoRolesAjax?'+uri, 500, 450);
}

function showReports(ROL_UID)
{
	var oRPC = new leimnud.module.rpc.xmlhttp({
		url   : PROCESS_REQUEST_FILE,
		async : false,
		method: 'POST',
		args  : 'request=showReports&ROL_UID=' + ROL_UID
    });
    oRPC.make();
    currentPopupWindow.clearContent();
	  currentPopupWindow.addContent(oRPC.xmlhttp.responseText);
}

function assignReportToRole(ROL_UID, REP_UID)
{
	
	var oRPC = new leimnud.module.rpc.xmlhttp({
		url   : PROCESS_REQUEST_FILE,
		async : false,
		method: 'POST',
		args  : 'request=assignReportToRole&ROL_UID=' + ROL_UID + '&REP_UID=' + REP_UID
    });
    oRPC.make();
  currentPopupWindow.clearContent();
	currentPopupWindow.addContent(oRPC.xmlhttp.responseText);	
}

function deleteReportRole(ROL_UID, REP_UID){
	
	new leimnud.module.app.confirm().make({
    	label:G_STRINGS.ID_MSG_CONFIRM,
    	action:function(){
	        var oRPC = new leimnud.module.rpc.xmlhttp({
				url   : PROCESS_REQUEST_FILE,
				async : false,
				method: 'POST',
				args  : 'request=deleteReportRole&ROL_UID=' + ROL_UID + '&REP_UID=' + REP_UID
	        });
	        oRPC.make();
	        currentPopupWindow.clearContent();
			currentPopupWindow.addContent(oRPC.xmlhttp.responseText);
		}.extend(this)
    });
};

function backPermissions(ROL_UID)
{
	var oRPC = new leimnud.module.rpc.xmlhttp({
		url   : PROCESS_REQUEST_FILE,
		async : false,
		method: 'POST',
		args  : 'request=viewPermitions&ROL_UID=' + ROL_UID
    });
    oRPC.make();
    currentPopupWindow.clearContent();
	currentPopupWindow.addContent(oRPC.xmlhttp.responseText);
}

function backUsers(ROL_UID)
{
	var oRPC = new leimnud.module.rpc.xmlhttp({
		url   : PROCESS_REQUEST_FILE,
		async : false,
		method: 'POST',
		args  : 'request=usersIntoRole&ROL_UID=' + ROL_UID
    });
    oRPC.make();
    currentPopupWindow.clearContent();
	currentPopupWindow.addContent(oRPC.xmlhttp.responseText);
}
  
  
  
function AJAX() 
{
	try	{
		xmlhttp = new XMLHttpRequest();
	} 
	catch(generic_error) {
		try {
			xmlhttp = new ActiveXObject("Msxml2.XMLHTTP");
		} catch (microsoft_old_error) {
			try {
				xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
			} catch (microsoft_error) {
				xmlhttp = false;
			}
		}
	}
	return xmlhttp;
}
  
String.prototype.trim = function() 
{
	return this.replace(/^\s+|\s+get/g,"");
}

function $(id){
	return document.getElementById(id);
}

]]></JS>

</dynaForm>